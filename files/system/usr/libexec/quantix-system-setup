#!/usr/bin/bash

# Script version
readonly QNTX_VER=13
readonly QNTX_VER_DIR="/etc/quantix"
readonly QNTX_VER_FILE="${QNTX_VER_DIR}/qntx_version"
QNTX_VER_RAN=""

mkdir -p "${QNTX_VER_DIR}" || { echo "Error creating directory ${QNTX_VER_DIR}." >&2; exit 1; }

if [[ -f "${QNTX_VER_FILE}" ]]; then
  QNTX_VER_RAN=$(cat "${QNTX_VER_FILE}")
fi

# Run script if it has been updated
if [[ -n "${QNTX_VER_RAN}" && "${QNTX_VER}" == "${QNTX_VER_RAN}" ]]; then
    echo "Quantix system setup has already run. Exiting..."
    exit 0
fi

CPU_VENDOR=$(grep "vendor_id" "/proc/cpuinfo" | uniq | awk -F": " '{ print $2 }')
VENDOR_KARG="unset"

# Kargs for KVM
rpm-ostree kargs --append-if-missing="kvm.ignore_msrs=1" --append-if-missing="kvm.report_ignored_msrs=0" --append-if-missing="preempt=voluntary"

# Setup VFIO
echo 'add_drivers+=" vfio vfio_iommu_type1 vfio-pci "' | sudo tee /etc/dracut.conf.d/vfio.conf
rpm-ostree initramfs --enable

if [[ ${CPU_VENDOR} == "AuthenticAMD" ]]; then
    VENDOR_KARG="amd_iommu=on"
elif [[ ${CPU_VENDOR} == "GenuineIntel" ]]; then
    VENDOR_KARG="intel_iommu=on"  
fi
if [[ ${VENDOR_KARG} == "unset" ]]; then
    echo "Failed to get CPU vendor, exiting..."
    exit 1
else
    plymouth display-message --text="Quantix is updating kargs... Please wait, this may take a while" || true
    rpm-ostree kargs \
    --append-if-missing="${VENDOR_KARG}" \
    --append-if-missing="gpu_sched.sched_policy=0" \
    --append-if-missing="iommu=pt" \
    --append-if-missing="rd.driver.pre=vfio_pci" \
    --append-if-missing="vfio_pci.disable_vga=1" \
    --delete-if-present="nomodeset" \
    --reboot || exit 1
fi

# Add wheel users to appropriate groups
QNTXGROUPS="plugdev input libvirt docker"
wheelarray=($(getent group wheel | cut -d ":" -f 4 | tr  ',' '\n'))

for QNTXGROUP in $QNTXGROUPS
do
    # if group does not exist, create it
    if ! grep -q "$QNTXGROUP" /etc/group; then
        bash -c "grep \"$QNTXGROUP\" /lib/group >> /etc/group"
    fi

    for QNTXUSER in $wheelarray
    do
        # if user is not in group, add them
        if ! id -nG "$QNTXUSER" | grep -qw "$QNTXGROUP"; then
            usermod -a -G $QNTXGROUP $QNTXUSER
        fi
    done
done

restorecon -rv /var/log/libvirt
restorecon -rv /var/lib/libvirt

# Write the version
echo "${QNTX_VER}" > "${QNTX_VER_FILE}" || { echo "Error writing to ${QNTX_VER_FILE}." >&2; exit 1; }
